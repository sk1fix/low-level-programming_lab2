%include "io64.inc"  ; Подключение библиотеки для ввода/вывода (например, для печати значений)

section .data
    ; Константы
    a dd 2.4                   ; Значение a
    x dd 0.2                   ; Значение x
    y dd 0.8                   ; Значение y
    ln dd 0.0                  ; Переменная для хранения значения ln

section .bss
    ; Результаты
    y4 resd 1                  ; Результат сравнения (сохраняем результат проверки y < ln^3)

section .text
    global main

main:
    mov rbp, rsp               ; Для корректного дебага, сохраняем значение стека
    finit                      ; Инициализация FPU (сброс всех флагов и установка нормального состояния FPU)

; ===== Task 4: Сравнение y < ln^3(sin(x) + a) =====
task4_x87:
    ; Рассчитываем ln^3(sin(x) + a)
    fld1                        ; Загрузка 1 в стек FPU (для дальнейших вычислений)

    fld dword[x]                ; Загружаем значение x
    fsin                        ; Вычисляем sin(x)
    fld dword[a]                ; Загружаем значение a
    fadd                        ; Вычисляем sin(x) + a

    fyl2x                       ; Вычисляем log2(sin(x) + a), результат сохраняется в st0
    fldln2                      ; Загружаем ln(2) в стэк (логарифм по основанию 2)
    fmulp                       ; Умножаем результат на ln(2) для получения ln(sin(x) + a)
    fst dword[ln]               ; Сохраняем результат ln(sin(x) + a) в переменную ln

    fld dword[ln]               ; Загружаем ln(sin(x) + a)
    fmulp                       ; Вычисляем ln^2(sin(x) + a)
    fld dword[ln]               ; Загружаем снова ln(sin(x) + a)
    fmulp                       ; Вычисляем ln^3(sin(x) + a)

    ; Сравнение y с ln^3
    fld dword[y]                ; Загружаем значение y
    fcomip st1             ; Сравниваем y (st0) с ln^3 (st1)
    jb less_condition           ; Если y < ln^3, переходим в метку less_condition

    fldz                        ; Если условие не выполнено (y >= ln^3), загружаем 0 в стек FPU
    jmp save_y4                 ; Переходим к сохранению результата

less_condition:
    fld1                        ; Если условие выполнено (y < ln^3), загружаем 1 в стек FPU

save_y4:
    fistp dword[y4]             ; Сохраняем результат проверки (0 или 1) в переменную y4

    ; Вывод результата
    PRINT_STRING "Result: "
    mov eax, [y4]               ; Загружаем результат из переменной y4
    PRINT_DEC 4, eax            ; Выводим результат в виде десятичного числа

    ret                         ; Завершаем выполнение программы
