%include "io64.inc"  ; Подключаем библиотеку для ввода-вывода (сработает в 64-битной системе)

section .data
    ; Константы для задач (вещественные числа)
    ctrl_word1 dw 0             ; Слово управления для FPU (всегда 0 при инициализации)
    float_num1 dd 5.5          ; Вещественное число, которое будет округляться (5.5)
    result_up1 dd 0.0          ; Результат округления вверх (в этой переменной будет храниться результат округления)

section .text
    global main

main:
    mov rbp, rsp               ; Для корректного дебага
    finit                      ; Инициализация FPU

; ===== Task 1: Округление (x87) =====
task1_x87:
    fstcw [ctrl_word1]         ; Сохраняем текущее слово управления FPU в переменную ctrl_word1

    ; Округление вверх (к +∞)
    mov ax, [ctrl_word1]       ; Загружаем в регистр ax значение текущего слова управления
    or ax, 0x0800              ; Включаем бит для округления вверх (к +∞). Это устанавливает флаг Rounding mode в FPU
    mov [ctrl_word1], ax       ; Сохраняем измененное слово управления обратно в переменную ctrl_word1
    fldcw [ctrl_word1]         ; Загружаем измененное слово управления в FPU (округление вверх)

    fld dword [float_num1]     ; Загружаем число 5.5 в стек FPU
    fistp dword [result_up1]    ; Округляем число вверх и сохраняем результат в переменную result_up1

    ; Выводим результат
    mov eax, [result_up1]      ; Загружаем результат округления в регистр eax
    PRINT_STRING "1) "         ; Печатаем строку "1) "
    PRINT_DEC 4, eax           ; Печатаем результат округления в десятичном формате

    ret                        ; Возвращаемся из программы
