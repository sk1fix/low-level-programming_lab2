%include "io64.inc"  ; Подключение библиотеки для ввода/вывода (сработает в 64-битной системе)

section .data
    ; Константы для задач (вещественные числа)
    a dd 2.0            ; Значение a
    b dd 0.5            ; Значение b
    c dd 1.1            ; Значение c
    x dd 2.0            ; Значение x

section .bss
    ; Результаты (неинициализированная память)
    y4_x87 resd 1       ; Переменная для хранения результата задачи 4 (не используется в данном случае)
    y3_x87 resd 1       ; Переменная для хранения результата выражения a * sin(bx) + cos(cx)

section .text
    global main

main:
    mov rbp, rsp        ; Для корректного дебага
    finit               ; Инициализация FPU (FPU в исходное состояние)

; ===== Task 2: a * sin(bx) + cos(cx) (x87) =====
task2_x87:
    ; Вычисляем a * sin(bx) + cos(cx)
    fld dword[b]        ; Загружаем значение b в стек FPU
    fld dword[x]        ; Загружаем значение x в стек FPU (находится над b, t1)
    fmul                 ; Умножаем b * x (результат в st(0), t1 = b * x)
    fsin                 ; Вычисляем sin(bx), результат сохраняется в st(0)

    fld dword[a]        ; Загружаем значение a в стек FPU
    fmul                 ; Умножаем a * sin(bx), результат сохраняется в st(0)

    fld dword[c]        ; Загружаем значение c в стек FPU
    fld dword[x]        ; Загружаем значение x в стек FPU
    fmul                 ; Умножаем c * x, результат в st(0)
    fcos                 ; Вычисляем cos(cx), результат сохраняется в st(0)

    fadd                 ; Складываем a * sin(bx) и cos(cx), результат в st(0)
    
    fistp dword[y3_x87]  ; Сохраняем результат вычисления в переменную y3_x87 (округление в целое)

    ret                  ; Возвращаемся
